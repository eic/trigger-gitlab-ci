name: 'Trigger GitLab CI through webhooks'
description: 'Triggers the GitLab CI pipeline through webhook pipeline trigger and associated token'
branding:
  icon: 'play'
  color: 'blue'
inputs:
  url:
    description: 'GitLab server url (at the level under which the API starts)'
    required: false
    default: 'https://gitlab.com'
  project_id:
    description: 'GitLab project ID'
    required: true
    default: ''
  token:
    description: 'GitLab pipeline trigger token (GitLab Settings > CI/CD > Pipeline Triggers)'
    required: true
    default: ''
  ref_name:
    description: 'GitLab project ref_name (branch or tag name; defaults to main)'
    required: false
    default: 'main'
  variables:
    description: 'Additional variables in VAR=value format to pass to the pipeline'
    required: false
    default: ''

outputs:
  json:
    description: "GitLab webhook response (JSON)"
    value: ${{ steps.call-webhook.outputs.json }}
  web_url:
    description: "GitLab pipeline URL"
    value: ${{ steps.call-webhook.outputs.web_url }}

runs:
  using: "composite"
  steps:
    - id: call-webhook
      run: |
        # Parse VARIABLES into multiple arguments
        while IFS= read -r variable; do
          if [[ $variable =~ ^([a-zA-Z_][a-zA-Z0-9_]*)=(.*) ]] ; then
            variable_args="${variable_args:-} -F variables[${BASH_REMATCH[1]}]=${BASH_REMATCH[2]}"
          else
            echo "Unable to parse variable $variable"
          fi
        done <<< "${VARIABLES}"
        # Fail if no token
        test -n "${TOKEN}" || echo "::warning ::No secret token was set!"
        # Print webhook call
        echo curl -X POST \
             --fail \
             -o response.json \
             -F "token=${TOKEN}" \
             -F "ref=${REF_NAME}" \
             ${variable_args} \
             ${URL}/api/v4/projects/${PROJECT_ID}/trigger/pipeline
        # Call webhook
        curl -X POST \
             --fail \
             -o response.json \
             -F "token=${TOKEN}" \
             -F "ref=${REF_NAME}" \
             ${variable_args} \
             ${URL}/api/v4/projects/${PROJECT_ID}/trigger/pipeline \
             || ( RETCODE="$?"; jq . response.json; exit "$RETCODE" )
        # Print and parse json
        jq . response.json
        echo "json=$(cat response.json)" >> $GITHUB_OUTPUT
        echo "web_url=$(cat response.json | jq -c '.web_url')" >> $GITHUB_OUTPUT
      shell: bash
      env:
        URL: ${{ inputs.url }}
        PROJECT_ID: ${{ inputs.project_id }}
        TOKEN: ${{ inputs.token }}
        REF_NAME: ${{ inputs.ref_name }}
        VARIABLES: ${{ inputs.variables }}
